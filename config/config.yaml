skip_processed_files: False # Use sparingly as it won't update existing files
skip_process_review_interval:  180 # Time in Days
# Language codes are determined by the translation files present in the translations/ directory
# Each language requires a corresponding [lang_code].json file with a "language_name" field
output_language: 'en'  # Language for output text (e.g., 'en' for English, 'es' for Spanish)
ocr_language: 'eng+ita' # Add additional languages with + separator (e.g., 'eng+spa') These correspond with the Tesseract language codes (https://tesseract-ocr.github.io/tessdoc/Data-Files-in-different-versions.html)

# File Locations
scans_location: '/Users/john/Downloads/medical_records_output/scans'
output_location: '/Users/john/Downloads/medical_records_output'
output_html: 'medical_records_Test.html'
filename_format: '{patient_last}_{patient_initials}_{treatment_date}_{visit_type}_{provider_name_last}_{seq:03d}'  # Format for renamed files
processed_checksums_file: 'processed_files.json'

# AI Processing Configuration
ai_processing:
  model_name: 'gpt-4o-mini'  # OpenAI model to use
  role_prompt: >
    You are an expert ${output_language} translator and medical records analyst. Your task is to extract structured information 
    from medical records. Analyze the provided text and return information in the dspecified format.
    IMPORTANT: The patient only speaks ${output_language}. Provide all your responses in ${output_language}. 
    If there is not enough information 
    from which to draw conclusions, return "Not enough information" in the appropriate language.
  max_tokens: 10000
  temperature: 0.1
  
  # Function schema for structured responses
  function_schema:
    name: "analyze_medical_record"
    description: "Analyzes medical records to extract key information and provide results in ${output_language}"
    parameters:
      type: "object"
      properties:
        patient:
          type: "object"
          description: "Information about the patient (provide in ${output_language})"
          properties:
            first_name:
              type: "string"
              description: "Patient's first name (preserve original spelling)"
            middle_name:
              type: "string"
              description: "Patient's middle name if available (preserve original spelling)"
            last_name:
              type: "string"
              description: "Patient's last name (preserve original spelling)"
        summary:
          type: "string"
          description: "A comprehensive summary in ${output_language} of the medical examination or appointment. This should be detailed but concise, highlighting central and/or unusual findings."
        treatment_date:
          type: "string"
          format: "date"
          description: "The date of the medical visit or treatment in YYYY-MM-DD format"
        visit_type:
          type: "string"
          description: "The type of medical visit or specialty (e.g., ophthalmology, nephrology, gastroenterology) in the original language"
        provider:
          type: "object"
          description: "Information about the healthcare provider"
          properties:
            name:
              type: "string"
              description: "Surname of the doctor or provider, if available"
            facility:
              type: "string"
              description: "Name of the hospital or clinic"
          required: ["facility"]
        primary_condition:
          type: "string"
          description: "The main medical condition being discussed in ${output_language} (and the original in parentheses if there is a translation)"
        diagnoses:
          type: "array"
          items:
            type: "string"
          description: "List of diagnoses mentioned in the record in ${output_language} (and the original in parentheses if there is a translation)"
        treatments:
          type: "array"
          items:
            type: "string"
          description: "List of recommended treatments or next steps in ${output_language} (and the original in parentheses if there is a translation)"
        test_results:
          type: "object"
          description: "Significant test results or measurements maintaining original spelling"
          properties:
            name:
              type: "string"
              description: "Name of the test in ${output_language} (and the original in parentheses if there is a translation)"
            value:
              type: "string"
              description: "Test result or measurement value in ${output_language} (and the original in parentheses if there is a translation)"
            interpretation:
              type: "string"
              description: "Clinical interpretation of the result in ${output_language} (and the original in parentheses if there is a translation)"
          required: ["name", "value"]
        medications:
          type: "array"
          items:
            type: "object"
            properties:
              name:
                type: "string"
                description: "Name of the medication (maintain original spelling)"
              dosage:
                type: "string"
                description: "Prescribed dosage (maintain original spelling)"
              frequency:
                type: "string"
                description: "How often to take the medication in ${output_language} (and the original in parentheses if there is a translation)"
            required: ["name"]
      required: ["summary", "visit_type", "provider", "primary_condition", "patient", "diagnoses", "treatments", "treatment_date"]

# AI Overall Summary Configuration
ai_overall_summary:
  model_name: 'gpt-4o-mini'  # OpenAI model to use e.g., 'gpt-4'
  role_prompt: >
    You are an expert ${output_language} translator and medical records analyst. Your task is to review and summarize structured information 
    from medical records. Analyze the provided text and return information in the specified format.
    IMPORTANT: The patient only speaks ${output_language}. Provide all your responses in ${output_language}. 
    You will generate distinct sections: Patient, Medical History, Summary, Key Findings, and Recommendations listings.
    Keep them just text blocks at this point, but make sure they are in the target language with key terms in the original language.
  max_tokens: 10000
  temperature: 0.1
  # Function schema for structured responses
  function_schema:
    name: "summarize_medical_record"
    description: "Analyzes medical records to extract key information and provide results in ${output_language}"
    parameters:
      type: "object"
      properties:
        patient:
          type: "object"
          description: "A general description of the patient in ${output_language}. Include key information such as name, age, gender, and any relevant medical history."
          properties:
            section:
              type: "string"
              description: "Text block describing the patient in ${output_language}"
        medical_history:
          type: "object"
          description: "An overview of the patient's medical history, including key medical conditions, diagnoses, treatments, medications, and test results in ${output_language} with key conditions/diagnoses in original language in parentheses"
          properties:
            section:
              type: "string"
              description: "Text block describing the patient's visit and exam history in ${output_language} from the reviewed documents"
        summary:
          type: "object"
          description: "A summary of the patient's medical history, including key medical conditions, diagnoses, treatments, medications, and test results in ${output_language} with key conditions/diagnoses in original language in parentheses. Use bolding and italics to highlight key findings."
          properties:
            section:
              type: "string"
              description: "Text block summarizing the patient's medical history in ${output_language}"
        key_findings:
          type: "object"
          description: "A summary of the patient's key findings, including key medical conditions, diagnoses, treatments, medications, and test results in ${output_language} with key conditions/diagnoses in original language in parentheses"
          properties:
            section:
              type: "string"
              description: "Text block summarizing the patient's key findings in ${output_language}"
        recommendations:
          type: "object"
          description: "A summary of the patient's recommended treatments or next steps in ${output_language} with key conditions/diagnoses in original language in parentheses. Use bolding and italics to highlight key findings."
          properties:
            section:
              type: "string"
              description: "Text block summarizing the patient's recommended treatments or next steps in ${output_language}"
      required: ["patient", "medical_history", "summary", "key_findings", "recommendations"]
